@page
@model ProjectMiniAccountManagementSystem.Pages.Accounts.ChartOfAccountsModel

@{
    ViewData["Title"] = "Chart of Accounts";
}

<h2>Chart of Accounts</h2>

<div class="row">
    <div class="col-md-6">
        <h4>Accounts Hierarchy</h4>
        @await Html.PartialAsync("_AccountTree", Model.Tree)
    </div>

    <div class="col-md-6">
        @if (Model.EditMode)
        {
            <h4>Edit Account</h4>
            <form method="post">
                <input type="hidden" name="Action" value="Update" />
                <input type="hidden" asp-for="FormAccountId" />

                <div class="mb-3">
                    <label asp-for="FormAccountName" class="form-label">Account Name</label>
                    <input asp-for="FormAccountName" class="form-control" required />
                </div>

                <div class="mb-3">
                    <label asp-for="FormParentAccountId" class="form-label">Parent Account</label>
                    <select asp-for="FormParentAccountId" class="form-select">
                        <option value="">-- None (Top Level) --</option>
                        @foreach (var acct in Model.FlatList.Where(a => a.AccountId != Model.FormAccountId))
                        {
                            <option value="@acct.AccountId">@acct.AccountName</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label asp-for="FormAccountType" class="form-label">Account Type</label>
                    <select asp-for="FormAccountType" class="form-select" required>
                        <option value="">-- Select Type --</option>
                        <option>Asset</option>
                        <option>Liability</option>
                        <option>Equity</option>
                        <option>Revenue</option>
                        <option>Expense</option>
                    </select>
                </div>

                <div class="mb-3 form-check">
                    <input asp-for="FormIsActive" class="form-check-input" />
                    <label asp-for="FormIsActive" class="form-check-label">Active</label>
                </div>

                <button type="submit" class="btn btn-primary">Update</button>
                <a asp-page="./ChartOfAccounts" class="btn btn-secondary">Cancel</a>
            </form>
        }
        else
        {
            <h4>Add New Account</h4>
            <form method="post">
                <input type="hidden" name="Action" value="Create" />

                <div class="mb-3">
                    <label asp-for="FormAccountName" class="form-label">Account Name</label>
                    <input asp-for="FormAccountName" class="form-control" required />
                </div>

                <div class="mb-3">
                    <label asp-for="FormParentAccountId" class="form-label">Parent Account</label>
                    <select asp-for="FormParentAccountId" class="form-select">
                        <option value="">-- None (Top Level) --</option>
                        @foreach (var acct in Model.FlatList)
                        {
                            <option value="@acct.AccountId">@acct.AccountName</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label asp-for="FormAccountType" class="form-label">Account Type</label>
                    <select asp-for="FormAccountType" class="form-select" required>
                        <option value="">-- Select Type --</option>
                        <option>Asset</option>
                        <option>Liability</option>
                        <option>Equity</option>
                        <option>Revenue</option>
                        <option>Expense</option>
                    </select>
                </div>

                <button type="submit" class="btn btn-success">Create</button>
            </form>
        }

        @if (!string.IsNullOrEmpty(TempData["StatusMessage"] as string))
        {
            <div class="alert alert-success mt-3">@TempData["StatusMessage"]</div>
        }
    </div>
</div>

<hr />

<h4>All Accounts (Flat List)</h4>
<table class="table table-bordered table-hover">
    <thead class="table-dark">
        <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Parent</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var a in Model.FlatList)
        {
            <tr>
                <td>@a.AccountName</td>
                <td>@a.AccountType</td>
                <td>@Model.FlatList.FirstOrDefault(p => p.AccountId == a.ParentAccountId)?.AccountName</td>
                <td>@(a.IsActive ? "Active" : "Inactive")</td>
                <td>
                    <div class="btn-group" role="group">
                        <form method="get" class="me-1">
                            <input type="hidden" name="id" value="@a.AccountId" />
                            <button type="submit" class="btn btn-sm btn-primary">Edit</button>
                        </form>
                        <form method="post" onsubmit="return confirm('Are you sure you want to delete this account?');">
                            <input type="hidden" name="Action" value="Delete" />
                            <input type="hidden" name="FormAccountId" value="@a.AccountId" />
                            <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                        </form>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>